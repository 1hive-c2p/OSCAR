{
    "id": "T0151",
    "type": "Technique",
    "tactic": "Execution",
    "realm": [
        "CloudSecurity",
        "CodeSecurity",
        "OpenSourceSecurity"
    ],
    "summary": "Installation scripts",
    "description": "A package installation script injection attack is a type of security exploit that involves an attacker injecting malicious code into a legitimate software package installation script.\nThe attack typically occurs when an attacker gains access to the distribution network of a software vendor or package manager, and injects malicious code into the package installation script. \nThis code may be designed to carry out a range of nefarious activities, such as stealing sensitive information, creating backdoors, or executing arbitrary code on the victim's system.\nOnce the victim downloads and installs the compromised software package, the injected code is executed, giving the attacker access to the victim's system.\n",
    "mitigations": [
        {
            "id": "M1500",
            "type": "Mitigation",
            "summary": "Verify third-party artifacts and open-source libraries",
            "description": "Verify third-party artifacts used in code are trusted and have not been infected by a malicious actor before use. \nThis can be accomplished, for example, by comparing the checksum of the dependency to its checksum in a trusted source. \nIf a difference arises, this may be a sign that someone interfered and added malicious code. \nIf this dependency is used, it will infect the environment and could end in a massive breach, leaving the organization exposed to data leaks and more.\n",
            "references": [
                "https://cloud.google.com/software-supply-chain-security/docs/dependencies"
            ],
            "metadata": [
                {
                    "version": 0.1
                },
                {
                    "state": "draft"
                }
            ]
        },
        {
            "id": "M1502",
            "type": "Mitigation",
            "summary": "Define trusted package managers and repositories",
            "description": "When pulling a package by name, the package manager might look for it in several package registries, some of which may be untrusted or badly configured. \nIf the package is pulled from such a registry, there is a higher likelihood that it could prove malicious. \nIn order to avoid this, configure packages to be pulled from trusted package registries.\n",
            "references": [
                "https://jfrog.com/whitepaper/devops-8-reasons-for-devops-to-use-a-binary-repository-manager/"
            ],
            "metadata": [
                {
                    "version": 0.1
                },
                {
                    "state": "draft"
                }
            ]
        },
        {
            "id": "M1503",
            "type": "Mitigation",
            "summary": "Implement SCA analysis",
            "description": "Component Analysis is the process of identifying potential areas of risk from the use of third-party and open-source software and hardware components.\nThe best option for implementing SCA analysis is integration of SCA analysis tools into your CI/CD environment in order to scan your source code dependencies before the release.\n",
            "references": [
                "https://owasp.org/www-community/Component_Analysis"
            ],
            "metadata": [
                {
                    "version": 0.1
                },
                {
                    "state": "draft"
                }
            ]
        }
    ],
    "detections": [
        {
            "id": "D1510",
            "type": "Detection",
            "summary": "Implement Intrusion Detection System and anti-malware",
            "description": "An intrusion detection system (IDS) is a security tool designed to detect and alert on unauthorized access to a computer system or network.\nImplementing intrusion detection systems (IDS) and anti-malware software can help to identify and block malicious activity.\nIDS is a critical security tool that helps organizations to detect and respond to security incidents in a timely manner. \nBy providing real-time monitoring and analysis of network traffic, IDS can help organizations to stay ahead of potential threats and reduce the risk of a security breach.\n",
            "references": [
                "https://www.checkpoint.com/cyber-hub/network-security/what-is-an-intrusion-detection-system-ids/"
            ],
            "metadata": [
                {
                    "version": 0.1
                },
                {
                    "state": "draft"
                }
            ]
        }
    ],
    "references": [
        "https://www.fortinet.com/blog/threat-research/more-supply-chain-attacks-via-new-malicious-python-packages-in-pypi",
        "https://medium.com/checkmarx-security/the-skeleton-squad-tracing-the-origins-and-scope-of-5000-malicious-packages-on-pypi-7516c16e4da9",
        "https://medium.com/checkmarx-security/automatic-execution-of-code-upon-package-download-on-python-package-manager-cd6ed9e366a8"
    ],
    "metadata": {
        "version": 0.1,
        "state": "draft"
    }
}